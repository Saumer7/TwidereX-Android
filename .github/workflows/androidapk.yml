name: Android CI

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'


jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up Android SDK License
        run: yes | /usr/local/lib/android/sdk/tools/bin/sdkmanager --licenses

      - name: Build with Gradle
        run: ./gradlew spotlessCheck lint build

      - name: Upload build reports
        uses: actions/upload-artifact@v2
        with:
          name: build-reports
          path: ./app/build/reports

      - name: Upload build apk
        uses: actions/upload-artifact@v2
        with:
          name: build-mapping
          path: ./app/build/outputs/apk
    needs: [build]
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up Android SDK License
        run: yes | /usr/local/lib/android/sdk/tools/bin/sdkmanager --licenses

      - name: Apply Signing
        env:
          ALIAS: ${{ secrets.ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: ./.github/apply_signing.sh

      - name: Build with Gradle
        run: ./gradlew assembleRelease bundleRelease

      - name: Check if is prelease
        if: startsWith(github.ref, 'refs/tags/')
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+\-(dev|beta)[0-9]+$ ]]; then
              echo ::set-output name=prelease::true
          fi
      - name: Create Prerelease
        if: steps.check-tag.outputs.prelease == 'true'
        run: |
          set -x
          assets=()
          for asset in $(find -name *-release.apk); do
            assets+=("-a" "$asset")
          done
          for asset in $(find -name *-release.aab); do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name" -p
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: steps.check-tag.outputs.prelease != 'true'
        run: |
          set -x
          assets=()
          for asset in $(find -name *-release.apk); do
            assets+=("-a" "$asset")
          done
          for asset in $(find -name *-release.aab); do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
